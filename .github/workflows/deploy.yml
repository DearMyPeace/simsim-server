name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'  # 또는 'zulu', 'temurin' 등
          java-version: 21

      - name: Create application.yml
        run: |
          cat <<EOF > src/main/resources/application.yml
            ${{ secrets.APP }}
          EOF
          cat <<EOF > src/main/resources/application.properties
            ${{ secrets.PROP }}
          EOF
          cat <<EOF gradle/wrapper/gradle-wrapper.properties
            ${{ secrets.GRADLE_WRAPPER }}
          EOF

      - name: Build with Gradle
        run: ./gradlew build

      - name: Archive JAR
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-app
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: spring-boot-app

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          TARGET_HOST: ${{ secrets.TARGET_HOST }}
          TARGET_USER: ${{ secrets.TARGET_USER }}
          TARGET_PATH: ${{ secrets.TARGET_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $TARGET_HOST >> ~/.ssh/known_hosts

          scp build/libs/*.jar $TARGET_USER@$TARGET_HOST:$TARGET_PATH
          ssh $TARGET_USER@$TARGET_HOST << EOF
            sudo systemctl stop spring
            mv $TARGET_PATH/*.jar $TARGET_PATH/spring.jar
            sudo systemctl start spring
          EOF
